{"version":3,"sources":["webpack:///./node_modules/gatsby-plugin-breakpoints/withBreakpoints.js","webpack:///./src/templates/TopicPage/index.tsx","webpack:///./src/components/ui/PageBanners/PageBanner.tsx","webpack:///./src/components/ui/Cards/PostCardHorizontal/PostCardHorizontal.tsx","webpack:///./node_modules/gatsby-plugin-breakpoints/index.js"],"names":["_interopRequireDefault","require","exports","__esModule","withBreakpoints","_extends2","_react","_BreakpointProvider","Component","props","breakpoints","useBreakpoint","default","createElement","TopicPage","useAnimationOnScroll","isPost","title","pageContext","url","description","className","fluid","image","childImageSharp","alt","data","allMdx","nodes","map","post","key","frontmatter","suburl","PageBanner","direction","Direction","vertical","children","PostCardHorizontal","sm","horizontal","onClickLink","cn","aos","imgStyle","objectFit","tags","join","BreakpointProvider","BreakpointContext","_withBreakpoints"],"mappings":"4IAEA,IAAIA,EAAyBC,EAAQ,QAErCC,EAAQC,YAAa,EACrBD,EAAQE,qBAAkB,EAE1B,IAAIC,EAAYL,EAAuBC,EAAQ,SAE3CK,EAASN,EAAuBC,EAAQ,SAExCM,EAAsBN,EAAQ,QAWlCC,EAAQE,gBATgB,SAAAI,GACtB,OAAO,SAAAC,GACL,IAAMC,GAAc,EAAIH,EAAoBI,iBAC5C,OAAoBL,EAAOM,QAAQC,cAAcL,GAAW,EAAIH,EAAUO,SAAS,CACjFF,YAAaA,GACZD,O,kCCjBP,yIA6FeK,UArE6B,SAACL,GAEzC,OADAM,cAEI,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIC,QAAQ,EACRC,MAAOR,EAAMS,YAAYD,MACzBE,IAAG,SAAWV,EAAMS,YAAYC,IAChCC,YAAaX,EAAMS,YAAYE,cAEnC,kBAAC,IAAD,CAAYC,UAAU,iCAClB,kBAAC,WAAD,KACI,4BAAKZ,EAAMS,YAAYD,OACvB,2BAAIR,EAAMS,YAAYE,cAE1B,kBAAC,WAAD,KACI,kBAAC,IAAD,CACIE,MAAOb,EAAMS,YAAYK,MAAMC,gBAAgBF,MAC/CG,IAAKhB,EAAMS,YAAYD,UAInC,kBAAC,IAAD,KACI,kBAAC,IAAD,KACKR,EAAMiB,KAAKC,OAAOC,MAAMC,KAAI,SAACC,GAAD,OACzB,kBAAC,IAAD,CACIC,IAAKD,EAAKE,YAAYC,OACtBH,KAAMA,EAAKE,sB,kCCpDvC,2DA+BeE,IArB+B,SAACzB,GAC3C,OACI,yBAAKY,UAAWZ,EAAMY,WAClB,yBAAKA,UAAcZ,EAAMY,UAAX,aACV,kBAAC,IAAD,CACIc,UAAWC,IAAUC,SACrBhB,UAAcZ,EAAMY,UAAX,sBAERZ,EAAM6B,SAAS,IAEpB,kBAAC,IAAD,CACIH,UAAWC,IAAUC,SACrBhB,UAAcZ,EAAMY,UAAX,oBAERZ,EAAM6B,SAAS,Q,kCCxBpC,6HAyDeC,IA3C+C,SAAC,GAGhC,IAF3BT,EAE2B,EAF3BA,KACAT,EAC2B,EAD3BA,UAEMX,EAAcC,0BAEpB,OACI,kBAAC,WAAD,KACKD,EAAY8B,GACT,kBAAC,IAAD,CAAUV,KAAMA,EAAMT,UAAWA,IAEjC,kBAAC,IAAD,CACIc,UAAWC,IAAUK,WACrBC,YAAaZ,EAAKG,OAClBZ,UAAWsB,IAAGtB,EAAW,yBACzBuB,IAAI,aAEJ,kBAAC,IAAD,CACIvB,UAAU,+BACVC,MAAOQ,EAAKP,MAAMC,gBAAgBF,MAClCuB,SAAU,CAAEC,UAAW,QACvBrB,IAAKK,EAAKb,QAGd,yBAAKI,UAAU,kCACX,yBAAKA,UAAU,wCACX,0BAAMA,UAAU,8CACXS,EAAKiB,KAAKC,KAAK,SAGxB,wBAAI3B,UAAU,yCACTS,EAAKb,OAEV,uBAAGI,UAAU,+CACRS,EAAKV,kB,kCC9ClClB,EAAQC,YAAa,EAErB,IAAII,EAAsBN,EAAQ,QAElCC,EAAQS,cAAgBJ,EAAoBI,cAC5CT,EAAQ+C,mBAAqB1C,EAAoB0C,mBACjD/C,EAAQgD,kBAAoB3C,EAAoB2C,kBAEhD,IAAIC,EAAmBlD,EAAQ,QAE/BC,EAAQE,gBAAkB+C,EAAiB/C","file":"component---src-templates-topic-page-index-tsx-cd83f717b329c8cdb126.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.withBreakpoints = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _BreakpointProvider = require(\"./BreakpointProvider\");\n\nconst withBreakpoints = Component => {\n  return props => {\n    const breakpoints = (0, _BreakpointProvider.useBreakpoint)();\n    return /*#__PURE__*/_react.default.createElement(Component, (0, _extends2.default)({\n      breakpoints: breakpoints\n    }, props));\n  };\n};\n\nexports.withBreakpoints = withBreakpoints;","import { graphql } from 'gatsby';\nimport Img from 'gatsby-image';\nimport React, { Fragment } from 'react';\nimport Container from '../../components/layout/Container/Container';\nimport PageLayout from '../../components/layout/PageLayout/PageLayout';\nimport PageSection from '../../components/layout/PageSection/PageSection';\nimport PostCardHorizontal from '../../components/ui/Cards/PostCardHorizontal/PostCardHorizontal';\nimport PageBanner from '../../components/ui/PageBanners/PageBanner';\nimport Seo from '../../components/utils/Seo';\nimport { useAnimationOnScroll } from '../../components/utils/useAnimateOnScroll';\n\ninterface TopicPageProps {\n    pageContext: {\n        title: string;\n        description: string;\n        image: FluidImage;\n        url: string;\n    };\n    data: {\n        allMdx: {\n            nodes: PostDetails[];\n        };\n    };\n}\n\nconst TopicPage: React.FC<TopicPageProps> = (props: TopicPageProps) => {\n    useAnimationOnScroll();\n    return (\n        <PageLayout>\n            <Seo\n                isPost={false}\n                title={props.pageContext.title}\n                url={`topic/${props.pageContext.url}`}\n                description={props.pageContext.description}\n            />\n            <PageBanner className=\"page-banner-withcircularimage\">\n                <Fragment>\n                    <h1>{props.pageContext.title}</h1>\n                    <p>{props.pageContext.description}</p>\n                </Fragment>\n                <Fragment>\n                    <Img\n                        fluid={props.pageContext.image.childImageSharp.fluid}\n                        alt={props.pageContext.title}\n                    ></Img>\n                </Fragment>\n            </PageBanner>\n            <PageSection>\n                <Container>\n                    {props.data.allMdx.nodes.map((post) => (\n                        <PostCardHorizontal\n                            key={post.frontmatter.suburl}\n                            post={post.frontmatter}\n                        ></PostCardHorizontal>\n                    ))}\n                </Container>\n            </PageSection>\n        </PageLayout>\n    );\n};\n\nexport const TopicQuery = graphql`\n    query($title: String) {\n        allMdx(\n            filter: {\n                frontmatter: {\n                    layout: { eq: \"BlogPage\" }\n                    tags: { in: [$title] }\n                }\n            }\n            sort: { fields: frontmatter___publishedAt, order: DESC }\n        ) {\n            nodes {\n                frontmatter {\n                    author\n                    \n                    description\n                    image {\n                        childImageSharp {\n                            fluid {\n                                ...GatsbyImageSharpFluid\n                            }\n                        }\n                    }\n                    layout\n                    suburl\n                    tags\n                    title\n                }\n            }\n        }\n    }\n`;\n\nexport default TopicPage;\n","import React from 'react';\nimport { Direction } from '../../../globals';\nimport Block from '../Cards/Block';\nimport './PageBanner.scss';\n\ninterface PageBannerProps {\n    className?: string;\n    children: React.ReactNode[]; //accepts two Fragments\n}\n\nconst PageBanner: React.FC<PageBannerProps> = (props: PageBannerProps) => {\n    return (\n        <div className={props.className}>\n            <div className={`${props.className}__content`}>\n                <Block\n                    direction={Direction.vertical}\n                    className={`${props.className}__content__details`}\n                >\n                    {props.children[0]}\n                </Block>\n                <Block\n                    direction={Direction.vertical}\n                    className={`${props.className}__content__image`}\n                >\n                    {props.children[1]}\n                </Block>\n            </div>\n        </div>\n    );\n};\n\nexport default PageBanner;\n","import cn from 'classnames';\nimport Img from 'gatsby-image';\nimport { useBreakpoint } from 'gatsby-plugin-breakpoints';\nimport React, { Fragment } from 'react';\nimport { Direction } from '../../../../globals';\nimport Card from '../Card';\nimport PostCard from '../PostCard/PostCard';\nimport './PostCardHorizontal.scss';\n\ninterface PostCardHorizontalProps {\n    post: Frontmatter;\n    className?: string;\n}\n\nconst PostCardHorizontal: React.FC<PostCardHorizontalProps> = ({\n    post,\n    className\n}: PostCardHorizontalProps) => {\n    const breakpoints = useBreakpoint();\n\n    return (\n        <Fragment>\n            {breakpoints.sm ? (\n                <PostCard post={post} className={className} />\n            ) : (\n                <Card\n                    direction={Direction.horizontal}\n                    onClickLink={post.suburl}\n                    className={cn(className, 'post-card--horizontal')}\n                    aos=\"fade-left\"\n                >\n                    <Img\n                        className=\"post-card--horizontal__image\"\n                        fluid={post.image.childImageSharp.fluid}\n                        imgStyle={{ objectFit: 'fill' }}\n                        alt={post.title}\n                    ></Img>\n\n                    <div className=\"post-card--horizontal__details\">\n                        <div className=\"post-card--horizontal__details__tags\">\n                            <span className=\"post-card--horizontal__details__tags__item\">\n                                {post.tags.join(' Â· ')}\n                            </span>\n                        </div>\n                        <h3 className=\"post-card--horizontal__details__title\">\n                            {post.title}\n                        </h3>\n                        <p className=\"post-card--horizontal__details__description\">\n                            {post.description}\n                        </p>\n                    </div>\n                </Card>\n            )}\n        </Fragment>\n    );\n};\n\nexport default PostCardHorizontal;\n","\"use strict\";\n\nexports.__esModule = true;\n\nvar _BreakpointProvider = require(\"./BreakpointProvider\");\n\nexports.useBreakpoint = _BreakpointProvider.useBreakpoint;\nexports.BreakpointProvider = _BreakpointProvider.BreakpointProvider;\nexports.BreakpointContext = _BreakpointProvider.BreakpointContext;\n\nvar _withBreakpoints = require(\"./withBreakpoints\");\n\nexports.withBreakpoints = _withBreakpoints.withBreakpoints;"],"sourceRoot":""}